package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"demo_graphql/graph/model"
	"fmt"
)

// AddEntry is the resolver for the addEntry field.
func (r *mutationResolver) AddEntry(ctx context.Context, input model.NewEntry) (*model.Entry, error) {
	panic(fmt.Errorf("not implemented: AddEntry - addEntry"))
}

// GetEntryByID is the resolver for the getEntryById field.
func (r *queryResolver) GetEntryByID(ctx context.Context, id string) (*model.Entry, error) {
	return r.EntryService.GetEntryByID(id)
	// return &model.Entry{
	// 	ID: "JP-5948372-B2",
	// 	Title: "音声アシスタントでの以前のユーザインタラクションに基づく意図導出",
	// 	Assignee: "アップル インコーポレイテッド, アップル  インコーポレイテッド",
	// 	Author: []string{"アダム ジョン チャイヤー，, アダム  ジョン チャイヤー，, ディディエ ルネ グッツオーニ，, ディディエ  ルネ グッツオーニ，, トーマス ロバート グルーバー，, トーマス  ロバート グルーバー，, クリストファー ディーン ブリガム，, クリストファー  ディーン ブリガム，"},
	// 	PriorityDate: "2010-01-18",
	// 	CreationDate: "2014-06-20",
	// 	PublicationDate: "2016-07-06",
	// 	GrantDate: "2016-07-06",
	// 	ResultLink: "https://patents.google.com/patent/JP5948372B2/ja",
	// 	RepresentativeFigureLink: "",
	// }, nil
}

// SearchEntryByTitle is the resolver for the searchEntryByTitle field.
func (r *queryResolver) SearchEntryByTitle(ctx context.Context, title string) ([]*model.Entry, error) {
	panic(fmt.Errorf("not implemented: SearchEntryByTitle - searchEntryByTitle"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
